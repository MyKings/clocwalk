
// 支持子模块统一配置
buildscript {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "http://repo.spring.io/libs-snapshot" }
        maven { url 'https://repo.spring.io/libs-milestone' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.19.RELEASE")
    }
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'maven'
    apply plugin: "java-library"

    group 'com.example.test'
    version = "0.0.4-SNAPSHOT"
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "http://repo.spring.io/libs-snapshot" }
        maven { url 'https://repo.spring.io/libs-milestone' }
        mavenCentral()
    }

}

subprojects {

    // 用于springcloud项目版本号
//    ext {
//        netflixVersion= 'Edgware.SR4'
//    }

    ext.buildDate = null
    ext.buildJarFile = new File(project.buildDir, "libs/${project.name}-${project.version}.jar")

    compileJava.options.fork = true

    def currentTime = java.time.ZonedDateTime.now()
    compileJava.doLast {
        buildDate = currentTime
        jar.manifest {
            attributes("Implementation-Date": project.buildDate)
        }
    }

    tasks.jar.onlyIf {
        project.buildDate != null || !project.buildJarFile.exists()
    }

    jar {
        enabled = true
        manifest {
            attributes("Implementation-Title": project.name,
                    "Implementation-Vendor": project.group,
                    "Created-By": project.group,
                    "Implementation-Version": project.version)
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    repositories {
        maven { url 'https://repo.spring.io/libs-milestone' }
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenCentral()
    }
    configurations.all {
        exclude(group: "cglib", module: "cglib")
        exclude(group: "cglib", module: "cglib-full")
    }
    dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile("org.projectlombok:lombok")
    }
}
